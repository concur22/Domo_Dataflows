SELECT
    "Fiscal Year",
    "Fiscal Year Start Month",
    "Fiscal Year End Month",
    "Post Month",
--    "Post Month Adjusted",
    "Entity",
    "1-Account Group",
    "2-Account SubGroup",
    "3-Account Branch",
    "4-Account Department",
    "5-Account SubDepartment",
    "6-Account Sales Category",
    "Account Name",
    "Account Number",
    "Monthly Signed Amount" AS "Amount",
     LAG("Monthly Signed Amount", 1) OVER (
        PARTITION BY "Entity", "1-Account Group", "4-Account Department", "Account Number"
        ORDER BY "Post Month"
    ) AS "Prior Month Amount",
    AVG("Monthly Signed Amount") OVER (
        PARTITION BY "Entity", "1-Account Group", "4-Account Department", "Account Number"
        ORDER BY "Post Month"
        ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING
    ) AS "Trailing 3-Month Avg Amount",
    LAG("Monthly Signed Amount", 12) OVER (
        PARTITION BY "Entity", "1-Account Group", "4-Account Department", "Account Number"
        ORDER BY "Post Month"
    ) AS "Prior Year Amount"
FROM (
    SELECT
        "Fiscal Year",
    	"Fiscal Year Start Month",
        "Fiscal Year End Month",
--        "Post Month", -- Unadjusted post month, where actual transactions may fall outside FY range
		(CASE WHEN "Post Month" > "Fiscal Year End Month" THEN "Fiscal Year End Month"
  			  WHEN "Post Month" < "Fiscal Year Start Month" THEN "Fiscal Year Start Month" 
  			  ELSE "Post Month" 
  			END) AS "Post Month",
        "Entity",
        "1-Account Group",
        "2-Account SubGroup",
        "3-Account Branch",
        "4-Account Department",
        "5-Account SubDepartment",
        "6-Account Sales Category",
        "Account Name",
        "Account Number",
        SUM(CASE
            WHEN "1-Account Group" = 'Revenue' THEN "Amount"
            ELSE "Amount" * -1
        END) AS "Monthly Signed Amount"
    FROM (
        SELECT
            CONCAT('FY', RIGHT(table_name, 4)) AS "Fiscal Year",
    		-- Fiscal Year Start Date: Fixed as July 31 of the prior calendar year for all rows in the fiscal year
            LAST_DAY(TO_DATE((SUBSTR(CONCAT('FY', RIGHT(table_name, 4)), 3)::INT - 1)::VARCHAR || '-07-01', 'YYYY-MM-DD')) AS "Fiscal Year Start Month",
            -- Fiscal Year End Date: Fixed as June 30 of the current calendar year for all rows in the fiscal year
            LAST_DAY(TO_DATE(SUBSTR(CONCAT('FY', RIGHT(table_name, 4)), 3) || '-06-01', 'YYYY-MM-DD')) AS "Fiscal Year End Month",
            LAST_DAY(ics."Date") AS "Post Month",
            ics."Date" AS "Post Date",
            ics."Subsidiary (no hierarchy)" AS "Entity",
            (CASE
                WHEN LEFT(ics."Name", 4) IN ('CUST', 'VEND') THEN COALESCE(SUBSTR(ics."Name", 11), 'N/A')
                ELSE ics."Name"
            END) AS "Customer",
            CASE
                WHEN LOWER(COALESCE(fi."Functional Line", 'Blank')) = 'cost of sales' THEN 'Cost of Sales'
                WHEN LOWER(COALESCE(fi."Functional Line", 'Blank')) IN (
                    'general & administrative expense',
                    'marketing expense',
                    'sales expense',
                    'research & development expense'
                ) THEN 'Operating Expenses'
                WHEN LOWER(COALESCE(fi."Functional Line", 'Blank')) LIKE '%revenue%' THEN 'Revenue'
                ELSE COALESCE(fi."Functional Line", 'Blank')
            END AS "1-Account Group",
            COALESCE(fi."Functional Line", 'Blank') AS "2-Account SubGroup",
            COALESCE(fi."Account Rollup", 'Blank') AS "3-Account Branch",
            COALESCE(fi."Department", 'Blank') AS "4-Account Department",
            COALESCE(NULLIF(SPLIT_PART(ics."Department", ' : ', 2), ''), 'N/A') AS "5-Account SubDepartment",
            COALESCE(NULLIF(SPLIT_PART(ics."Department", ' : ', 3), ''), 'N/A') AS "6-Account Sales Category",
            fi."Account Name",
            CAST(fi."Account Number" AS STRING) AS "Account Number",
            ics."Amount"
        FROM (
            SELECT 'income_statement_transactions_2024' AS table_name, "Date", "Subsidiary (no hierarchy)", "Name", "Department", "Department (no hierarchy)", "Account", "Account Type", "Amount"
            FROM "income_statement_transactions_2024"
            UNION ALL
            SELECT 'income_statement_transactions_2025', "Date", "Subsidiary (no hierarchy)", "Name", "Department", "Department (no hierarchy)", "Account", "Account Type", "Amount"
            FROM "income_statement_transactions_2025"
            UNION ALL
            SELECT 'income_statement_transactions_2026', "Date", "Subsidiary (no hierarchy)", "Name", "Department", "Department (no hierarchy)", "Account", "Account Type", "Amount"
            FROM "income_statement_transactions_2026"
        ) ics
        LEFT JOIN "functional_income_statement_build" fi
            ON SPLIT_PART(ics."Account", ' ', 1)::STRING = TRIM(fi."Account Number"::STRING)
                AND COALESCE(ics."Department (no hierarchy)", '- No Department -') = fi."Department"
                AND CAST(ics."Account Type" AS STRING) = CAST(fi."Acct Type" AS STRING)
    ) sub
  
    WHERE 
  		-- Filter out current month
  		"Post Month" < LAST_DAY(CURRENT_DATE)
        -- Filter out transactions falling outside of fiscal year --
      		-- AND "Post Month" BETWEEN "Fiscal Year Start Month" AND "Fiscal Year End Month"
        -- OR, should I instead ensure to include all transactions, whether or not they fall outside of the FY start and end dates? -- Ref "Post Month Adjusted" calculation, and fix the out of bounds "Post Month" dates?
      		 AND (CASE 
                  	WHEN "Post Month" > "Fiscal Year End Month" THEN "Fiscal Year End Month"
                    WHEN "Post Month" < "Fiscal Year Start Month" THEN "Fiscal Year Start Month" 
                    ELSE "Post Month" 
  				  END) BETWEEN "Fiscal Year Start Month" AND "Fiscal Year End Month"
  
    GROUP BY
        "Fiscal Year",
    	"Fiscal Year Start Month",
    	"Fiscal Year End Month",
        "Post Month",
-- 		"Post Month Adjusted",
        "Entity",
        "1-Account Group",
        "2-Account SubGroup",
        "3-Account Branch",
        "4-Account Department",
        "5-Account SubDepartment",
        "6-Account Sales Category",
        "Account Name",
        "Account Number"
) agg

-- WHERE "Post Month" != "Post Month Adjusted"

ORDER BY
    "Fiscal Year" DESC,
    "Post Month" DESC,
    "Account Number" ASC
